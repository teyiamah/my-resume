name: build push and deploy image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: read 

env:
   AWS_REGION: us-east-1
   AWS_ROLE: ${{ secrets.AWS_ACTION_ROLE }}
   ECR_REPO_NAME: dev
   IMAGE_TAG: ${{ github.run_number}}

jobs:
  build:
    runs-on: ubuntu-latest  # github runner
    steps:
      - name: clone repo
        uses: actions/checkout@v4 
      - name: Aws creds config 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}    #OICD
          aws-region: ${{env.AWS_REGION}}
      - name: Loging to ecr
        uses: aws-actions/amazon-ecr-login@v2
        id: ecr-login
      - name: Build tag and push image
        id: build-and-push
        run: |
            docker build -t ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME}}:${{ env.IMAGE_TAG}} .
          

      - name: Scan image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME}}:${{ env.IMAGE_TAG }}"
          format: "table"
          exit-code: "0"
        #  output: "trivy-image-results.json"
          severity: "CRITICAL,HIGH"

      - name: push image to ecr
        run: |
          docker push ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME}}:${{ env.IMAGE_TAG}}

      - name: Store image in github env
        run: echo "Image=${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME}}:${{ env.IMAGE_TAG}}" >> $GITHUB_ENV

  Deploy:
    run-on: ubuntu-latest
    needs: Buildb 
        
